{"version":3,"sources":["context/GlobalState.jsx","hooks/useLocalStorage.js","components/Balance.jsx","components/ShowAllButton.jsx","components/History.jsx","components/TransactionsList.jsx","components/HistoryList.jsx","helpers/idGenerator.js","components/AddTransaction.jsx","components/HomeScreen.jsx","components/HistoryLog.jsx","App.js","index.js"],"names":["GlobalContext","createContext","GlobalStateProvider","props","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","transactions","setTransactions","Provider","transactionsState","children","Balance","useContext","amounts","map","transaction","amount","income","filter","reduce","a","b","expense","balance","toFixed","className","Math","abs","ShowAllButton","history","useHistory","onClick","push","History","sign","description","id","TransactionsList","reversedTransactionsList","slice","reverse","limit","HistoryList","length","idGenerator","S4","random","toString","substring","AddTransaction","setDescription","undefined","setAmount","addTransaction","event","preventDefault","prevTransactions","parseFloat","htmlFor","type","onChange","target","placeholder","onKeyPress","evt","handleEnter","HomeScreen","HistoryLog","App","path","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1492d56a.chunk.js","sourcesContent":["import React, { createContext } from 'react';\nimport { useLocalStorage } from '../hooks/useLocalStorage'\n    \nexport const GlobalContext = createContext();\n\nexport const GlobalStateProvider = (props) => {\n    const [transactions, setTransactions] = useLocalStorage('transactions', [])\n\n    return(\n        <GlobalContext.Provider value = { {transactionsState: [transactions, setTransactions]} }>\n            {props.children}\n        </GlobalContext.Provider>\n    )\n\n}","import React, { useState } from 'react';\n\nexport function useLocalStorage(key, initialValue) {\n    // State to store our value\n    // Pass initial state function to useState so logic is only executed once\n    const [storedValue, setStoredValue] = useState(() => {\n      try {\n        // Get from local storage by key\n        const item = window.localStorage.getItem(key);\n        // Parse stored json or if none return initialValue\n        return item ? JSON.parse(item) : initialValue;\n      } catch (error) {\n        // If error also return initialValue\n        console.log(error);\n        return initialValue;\n      }\n    });\n  \n    // Return a wrapped version of useState's setter function that ...\n    // ... persists the new value to localStorage.\n    const setValue = (value) => {\n      try {\n        // Allow value to be a function so we have same API as useState\n        const valueToStore =\n          value instanceof Function ? value(storedValue) : value;\n        // Save state\n        setStoredValue(valueToStore);\n        // Save to local storage\n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n      } catch (error) {\n        // A more advanced implementation would handle the error case\n        console.log(error);\n      }\n    };\n  \n    return [storedValue, setValue];\n  }","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'\n\nexport const Balance = (props) => {\n  const { transactionsState } = useContext(GlobalContext)\n  const [transactions, setTransactions] = transactionsState;\n  \n  const amounts = transactions.map ( transaction => transaction.amount) \n  const income = amounts.filter(item => item > 0).reduce((a, b) => a+b, 0)\n  const expense = amounts.filter(item => item < 0).reduce((a, b) => a+b, 0)\n  const balance = amounts.reduce((a,b) => a + b, 0)\n\n  return (\n    <>\n        <div>\n          <div>\n            <h4>My Balance</h4>\n            <h1>${balance.toFixed(2)}</h1>\n          </div>\n        </div>\n        <div className='inc-exp-container '>\n          <div>\n            <h4>Income</h4>\n            <p className=\"money plus\">${income.toFixed(2)}</p>\n          </div>\n          <div>\n            <h4>Expense</h4>\n            <p className=\"money minus\">-${Math.abs(expense).toFixed(2)}</p>\n          </div>\n        </div>\n    </>\n  )\n    \n}\n\n","import React from 'react';\nimport { useHistory } from 'react-router-dom'\n\n\nconst ShowAllButton = (props) => {\n    const history = useHistory();\n    return (\n        <div className= 'center-div'>\n            <button\n                className = 'btn btn-show-transactions'\n                onClick = {() => history.push('/log')}\n            >\n                SHOW ALL TRANSACTIONS\n            </button>\n        </div>\n    )\n    \n}\n\nexport default ShowAllButton","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState';\n\nconst History = (props) => {\n    const sign = props.transaction.amount < 0 ? '-' : '+';\n    const { transactionsState } = useContext(GlobalContext)\n    const [transactions, setTransactions] = transactionsState;\n    \n    const deleteTransaction = (transaction) => {\n        setTransactions(transactions.filter(transaction => transaction.id != props.transaction.id))\n    }\n\n    return (\n        <li className={props.transaction.amount > 0 ? 'plus' : 'minus'}>\n            {props.transaction.description}\n            <span> {sign}${ Math.abs(props.transaction.amount) } </span>\n            <button className='delete-btn' onClick = {deleteTransaction}> x </button>\n        </li>  \n    )\n    \n}\n\nexport default History","import React, { useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'\nimport History from './History'\n\nconst TransactionsList = (props) => {\n  const { transactionsState } = useContext(GlobalContext)\n  const [transactions, setTransactions] = transactionsState;\n  const reversedTransactionsList = transactions.slice(0).reverse()\n  \n  return (\n    <>\n      <ul id='list' className='list'>\n        {reversedTransactionsList.slice(0, props.limit).map(transaction => (\n          <History key = {transaction.id} transaction = {transaction}/> \n        ))}\n      </ul>\n    </>\n    \n  )\n}\n\nexport default TransactionsList","import React, {useContext} from 'react';\nimport { GlobalContext } from '../context/GlobalState'\nimport ShowAllButton from './ShowAllButton';\nimport TransactionsList from './TransactionsList'\n\nexport const HistoryList = () => {\n  const { transactionsState } = useContext(GlobalContext)\n  const [transactions, setTransactions] = transactionsState;\n  const listLimit = 3\n\n    return (\n      <>\n        <h3>Transactions history</h3>\n        <hr></hr>\n        {transactions.length == 0 ? <span>History log is empty.<br/>No transactions found.</span>: <TransactionsList limit = {listLimit}/>}\n        {transactions.length > listLimit ? <ShowAllButton/> : ''}\n      </>\n    )\n\n}\n\n","export function idGenerator() {\n    var S4 = function() {\n       return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\n    };\n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\n}","import React, { useState, useContext } from 'react';\nimport { GlobalContext } from '../context/GlobalState'\nimport { idGenerator } from '../helpers/idGenerator'\n\n\nexport const AddTransaction= (props) => {\n  const [description, setDescription] = useState('');\n  const [amount, setAmount] = useState(undefined);\n  const { transactionsState } = useContext(GlobalContext)\n  const [transactions, setTransactions] = transactionsState;\n\n  const addTransaction = event => {\n    event.preventDefault()\n    setTransactions(prevTransactions => [...prevTransactions, {\n      description: description,\n      amount: parseFloat(amount),\n      id: idGenerator()\n    }])\n    setDescription('')\n    setAmount('')  \n  }\n  \n  const handleEnter = evt => {\n    if (evt.key === 'Enter'){\n      evt.preventDefault();\n      return (amount != 0 && description != '' && amount != undefined) ? addTransaction(evt) : ''\n    }\n  }\n\n  return (\n    <>\n      <h3>Add new transaction</h3>\n      <hr className='style-one'></hr>\n      <div className='form-control'>\n        <label htmlFor='text'>Description</label>\n        <input type='text' value={ description } onChange={ event => setDescription(event.target.value) } placeholder='Enter transaction description'></input>\n      </div>\n      <div className='form-control'>\n        <label htmlFor='amount'>Amount <br /> (negative - expense, positive - income) </label>\n        <input onKeyPress={ evt => handleEnter(evt) } type = 'number' value = { amount } onChange={ event => setAmount(event.target.value) } placeholder='Enter transaction amount'></input>\n      </div>\n      <button className='btn' onClick = { (amount != 0 && description != '' && amount != undefined)? addTransaction : '' } id='addBtn'>Add transaction</button>\n    </>\n  )\n}\n\n","import React from 'react'\nimport { Balance } from './Balance'\nimport { HistoryList } from './HistoryList'\nimport { AddTransaction } from './AddTransaction'\n\nexport const HomeScreen = () => {\n  return (\n    <>\n      <div className = 'container'>\n\t\t\t\t<h2>Expense Tracker</h2>\n        <Balance />\n        <HistoryList />\n        <AddTransaction />\n      </div> \n    </>\n    )\n}\n","import React from 'react'\nimport TransactionsList from './TransactionsList';\nimport { useHistory } from 'react-router-dom'\n\nexport const HistoryLog = () => {\n  const history = useHistory()\n  \n  return (\n        <>\n            <div className = 'container container-log'>\n                <div className = 'log-header '>\n                    <div className = 'arrow arrow--left' onClick = { () => history.push('/') }> </div>\n                    <h3 className='center-div'> Transactions history </h3> \n                </div>\n                <hr></hr>\n                <TransactionsList />\n            </div>\n\n        </>\n    )\n}\n\n","import React from 'react';\nimport { HomeScreen } from './components/HomeScreen'\nimport { HistoryLog } from './components/HistoryLog'\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom';\n\nfunction App() {\n\n  return (\n      <Router>\n        <Switch>\n          <Route path='/' exact component = { HomeScreen } />\n          <Route path='/log' component = { HistoryLog } /> \n        </Switch>\n      </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App\"\nimport './styles/styles.css';\nimport { GlobalStateProvider } from './context/GlobalState'\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStateProvider>\n      <App />\n    </GlobalStateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}